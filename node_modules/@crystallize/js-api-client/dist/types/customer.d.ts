import { z } from 'zod';
import { Address } from './address';
export declare const orderCustomerInputRequest: z.ZodObject<{
    identifier: z.ZodOptional<z.ZodString>;
    firstName: z.ZodOptional<z.ZodString>;
    middleName: z.ZodOptional<z.ZodString>;
    lastName: z.ZodOptional<z.ZodString>;
    birthDate: z.ZodOptional<z.ZodDate>;
    companyName: z.ZodOptional<z.ZodString>;
    taxNumber: z.ZodOptional<z.ZodString>;
    addresses: z.ZodOptional<z.ZodArray<z.ZodObject<{
        type: z.ZodEffects<z.ZodEnum<["delivery", "billing", "other"]>, import("json-to-graphql-query/lib/types/EnumType").EnumType, "delivery" | "billing" | "other">;
        firstName: z.ZodOptional<z.ZodString>;
        middleName: z.ZodOptional<z.ZodString>;
        lastName: z.ZodOptional<z.ZodString>;
        street: z.ZodOptional<z.ZodString>;
        street2: z.ZodOptional<z.ZodString>;
        streetNumber: z.ZodOptional<z.ZodString>;
        postalCode: z.ZodOptional<z.ZodString>;
        city: z.ZodOptional<z.ZodString>;
        state: z.ZodOptional<z.ZodString>;
        country: z.ZodOptional<z.ZodString>;
        phone: z.ZodOptional<z.ZodString>;
        email: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        street?: string | undefined;
        street2?: string | undefined;
        streetNumber?: string | undefined;
        postalCode?: string | undefined;
        city?: string | undefined;
        state?: string | undefined;
        country?: string | undefined;
        phone?: string | undefined;
        email?: string | undefined;
        type: import("json-to-graphql-query/lib/types/EnumType").EnumType;
    }, {
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        street?: string | undefined;
        street2?: string | undefined;
        streetNumber?: string | undefined;
        postalCode?: string | undefined;
        city?: string | undefined;
        state?: string | undefined;
        country?: string | undefined;
        phone?: string | undefined;
        email?: string | undefined;
        type: "delivery" | "billing" | "other";
    }>, "many">>;
}, "strict", z.ZodTypeAny, {
    firstName?: string | undefined;
    middleName?: string | undefined;
    lastName?: string | undefined;
    identifier?: string | undefined;
    birthDate?: Date | undefined;
    companyName?: string | undefined;
    taxNumber?: string | undefined;
    addresses?: {
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        street?: string | undefined;
        street2?: string | undefined;
        streetNumber?: string | undefined;
        postalCode?: string | undefined;
        city?: string | undefined;
        state?: string | undefined;
        country?: string | undefined;
        phone?: string | undefined;
        email?: string | undefined;
        type: import("json-to-graphql-query/lib/types/EnumType").EnumType;
    }[] | undefined;
}, {
    firstName?: string | undefined;
    middleName?: string | undefined;
    lastName?: string | undefined;
    identifier?: string | undefined;
    birthDate?: Date | undefined;
    companyName?: string | undefined;
    taxNumber?: string | undefined;
    addresses?: {
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        street?: string | undefined;
        street2?: string | undefined;
        streetNumber?: string | undefined;
        postalCode?: string | undefined;
        city?: string | undefined;
        state?: string | undefined;
        country?: string | undefined;
        phone?: string | undefined;
        email?: string | undefined;
        type: "delivery" | "billing" | "other";
    }[] | undefined;
}>;
export type OrderCustomerInputRequest = z.infer<typeof orderCustomerInputRequest>;
export type OrderCustomer = Omit<OrderCustomerInputRequest, 'addresses'> & {
    addresses: Address[];
};
export declare const createCustomerInputRequest: z.ZodObject<z.extendShape<{
    identifier: z.ZodOptional<z.ZodString>;
    firstName: z.ZodOptional<z.ZodString>;
    middleName: z.ZodOptional<z.ZodString>;
    lastName: z.ZodOptional<z.ZodString>;
    birthDate: z.ZodOptional<z.ZodDate>;
    companyName: z.ZodOptional<z.ZodString>;
    taxNumber: z.ZodOptional<z.ZodString>;
    addresses: z.ZodOptional<z.ZodArray<z.ZodObject<{
        type: z.ZodEffects<z.ZodEnum<["delivery", "billing", "other"]>, import("json-to-graphql-query/lib/types/EnumType").EnumType, "delivery" | "billing" | "other">;
        firstName: z.ZodOptional<z.ZodString>;
        middleName: z.ZodOptional<z.ZodString>;
        lastName: z.ZodOptional<z.ZodString>;
        street: z.ZodOptional<z.ZodString>;
        street2: z.ZodOptional<z.ZodString>;
        streetNumber: z.ZodOptional<z.ZodString>;
        postalCode: z.ZodOptional<z.ZodString>;
        city: z.ZodOptional<z.ZodString>;
        state: z.ZodOptional<z.ZodString>;
        country: z.ZodOptional<z.ZodString>;
        phone: z.ZodOptional<z.ZodString>;
        email: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        street?: string | undefined;
        street2?: string | undefined;
        streetNumber?: string | undefined;
        postalCode?: string | undefined;
        city?: string | undefined;
        state?: string | undefined;
        country?: string | undefined;
        phone?: string | undefined;
        email?: string | undefined;
        type: import("json-to-graphql-query/lib/types/EnumType").EnumType;
    }, {
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        street?: string | undefined;
        street2?: string | undefined;
        streetNumber?: string | undefined;
        postalCode?: string | undefined;
        city?: string | undefined;
        state?: string | undefined;
        country?: string | undefined;
        phone?: string | undefined;
        email?: string | undefined;
        type: "delivery" | "billing" | "other";
    }>, "many">>;
}, {
    tenantId: z.ZodOptional<z.ZodString>;
    lastName: z.ZodString;
    firstName: z.ZodString;
    phone: z.ZodOptional<z.ZodString>;
    meta: z.ZodOptional<z.ZodArray<z.ZodObject<{
        key: z.ZodString;
        value: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        value?: string | undefined;
        key: string;
    }, {
        value?: string | undefined;
        key: string;
    }>, "many">>;
    identifier: z.ZodOptional<z.ZodString>;
    externalReferences: z.ZodOptional<z.ZodArray<z.ZodObject<{
        key: z.ZodString;
        value: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        value?: string | undefined;
        key: string;
    }, {
        value?: string | undefined;
        key: string;
    }>, "many">>;
    email: z.ZodString;
}>, "strict", z.ZodTypeAny, {
    tenantId?: string | undefined;
    middleName?: string | undefined;
    phone?: string | undefined;
    identifier?: string | undefined;
    birthDate?: Date | undefined;
    companyName?: string | undefined;
    taxNumber?: string | undefined;
    addresses?: {
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        street?: string | undefined;
        street2?: string | undefined;
        streetNumber?: string | undefined;
        postalCode?: string | undefined;
        city?: string | undefined;
        state?: string | undefined;
        country?: string | undefined;
        phone?: string | undefined;
        email?: string | undefined;
        type: import("json-to-graphql-query/lib/types/EnumType").EnumType;
    }[] | undefined;
    meta?: {
        value?: string | undefined;
        key: string;
    }[] | undefined;
    externalReferences?: {
        value?: string | undefined;
        key: string;
    }[] | undefined;
    firstName: string;
    lastName: string;
    email: string;
}, {
    tenantId?: string | undefined;
    middleName?: string | undefined;
    phone?: string | undefined;
    identifier?: string | undefined;
    birthDate?: Date | undefined;
    companyName?: string | undefined;
    taxNumber?: string | undefined;
    addresses?: {
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        street?: string | undefined;
        street2?: string | undefined;
        streetNumber?: string | undefined;
        postalCode?: string | undefined;
        city?: string | undefined;
        state?: string | undefined;
        country?: string | undefined;
        phone?: string | undefined;
        email?: string | undefined;
        type: "delivery" | "billing" | "other";
    }[] | undefined;
    meta?: {
        value?: string | undefined;
        key: string;
    }[] | undefined;
    externalReferences?: {
        value?: string | undefined;
        key: string;
    }[] | undefined;
    firstName: string;
    lastName: string;
    email: string;
}>;
export type CreateCustomerInputRequest = z.infer<typeof createCustomerInputRequest>;
export declare const updateCustomerInputRequest: z.ZodObject<Omit<z.extendShape<{
    identifier: z.ZodOptional<z.ZodString>;
    firstName: z.ZodOptional<z.ZodString>;
    middleName: z.ZodOptional<z.ZodString>;
    lastName: z.ZodOptional<z.ZodString>;
    birthDate: z.ZodOptional<z.ZodDate>;
    companyName: z.ZodOptional<z.ZodString>;
    taxNumber: z.ZodOptional<z.ZodString>;
    addresses: z.ZodOptional<z.ZodArray<z.ZodObject<{
        type: z.ZodEffects<z.ZodEnum<["delivery", "billing", "other"]>, import("json-to-graphql-query/lib/types/EnumType").EnumType, "delivery" | "billing" | "other">;
        firstName: z.ZodOptional<z.ZodString>;
        middleName: z.ZodOptional<z.ZodString>;
        lastName: z.ZodOptional<z.ZodString>;
        street: z.ZodOptional<z.ZodString>;
        street2: z.ZodOptional<z.ZodString>;
        streetNumber: z.ZodOptional<z.ZodString>;
        postalCode: z.ZodOptional<z.ZodString>;
        city: z.ZodOptional<z.ZodString>;
        state: z.ZodOptional<z.ZodString>;
        country: z.ZodOptional<z.ZodString>;
        phone: z.ZodOptional<z.ZodString>;
        email: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        street?: string | undefined;
        street2?: string | undefined;
        streetNumber?: string | undefined;
        postalCode?: string | undefined;
        city?: string | undefined;
        state?: string | undefined;
        country?: string | undefined;
        phone?: string | undefined;
        email?: string | undefined;
        type: import("json-to-graphql-query/lib/types/EnumType").EnumType;
    }, {
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        street?: string | undefined;
        street2?: string | undefined;
        streetNumber?: string | undefined;
        postalCode?: string | undefined;
        city?: string | undefined;
        state?: string | undefined;
        country?: string | undefined;
        phone?: string | undefined;
        email?: string | undefined;
        type: "delivery" | "billing" | "other";
    }>, "many">>;
}, {
    tenantId: z.ZodOptional<z.ZodString>;
    lastName: z.ZodString;
    firstName: z.ZodString;
    phone: z.ZodOptional<z.ZodString>;
    meta: z.ZodOptional<z.ZodArray<z.ZodObject<{
        key: z.ZodString;
        value: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        value?: string | undefined;
        key: string;
    }, {
        value?: string | undefined;
        key: string;
    }>, "many">>;
    identifier: z.ZodOptional<z.ZodString>;
    externalReferences: z.ZodOptional<z.ZodArray<z.ZodObject<{
        key: z.ZodString;
        value: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        value?: string | undefined;
        key: string;
    }, {
        value?: string | undefined;
        key: string;
    }>, "many">>;
    email: z.ZodString;
}>, "tenantId" | "identifier">, "strict", z.ZodTypeAny, {
    middleName?: string | undefined;
    phone?: string | undefined;
    birthDate?: Date | undefined;
    companyName?: string | undefined;
    taxNumber?: string | undefined;
    addresses?: {
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        street?: string | undefined;
        street2?: string | undefined;
        streetNumber?: string | undefined;
        postalCode?: string | undefined;
        city?: string | undefined;
        state?: string | undefined;
        country?: string | undefined;
        phone?: string | undefined;
        email?: string | undefined;
        type: import("json-to-graphql-query/lib/types/EnumType").EnumType;
    }[] | undefined;
    meta?: {
        value?: string | undefined;
        key: string;
    }[] | undefined;
    externalReferences?: {
        value?: string | undefined;
        key: string;
    }[] | undefined;
    firstName: string;
    lastName: string;
    email: string;
}, {
    middleName?: string | undefined;
    phone?: string | undefined;
    birthDate?: Date | undefined;
    companyName?: string | undefined;
    taxNumber?: string | undefined;
    addresses?: {
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        street?: string | undefined;
        street2?: string | undefined;
        streetNumber?: string | undefined;
        postalCode?: string | undefined;
        city?: string | undefined;
        state?: string | undefined;
        country?: string | undefined;
        phone?: string | undefined;
        email?: string | undefined;
        type: "delivery" | "billing" | "other";
    }[] | undefined;
    meta?: {
        value?: string | undefined;
        key: string;
    }[] | undefined;
    externalReferences?: {
        value?: string | undefined;
        key: string;
    }[] | undefined;
    firstName: string;
    lastName: string;
    email: string;
}>;
export type UpdateCustomerInputRequest = z.infer<typeof updateCustomerInputRequest>;
export type Customer = Omit<CreateCustomerInputRequest, 'addresses'> & {
    addresses: Address[];
};
