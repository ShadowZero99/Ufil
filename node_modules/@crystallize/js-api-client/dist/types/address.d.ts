import { z } from 'zod';
import { EnumType } from 'json-to-graphql-query';
export declare const addressInputRequest: z.ZodObject<{
    type: z.ZodEffects<z.ZodEnum<["delivery", "billing", "other"]>, EnumType, "delivery" | "billing" | "other">;
    firstName: z.ZodOptional<z.ZodString>;
    middleName: z.ZodOptional<z.ZodString>;
    lastName: z.ZodOptional<z.ZodString>;
    street: z.ZodOptional<z.ZodString>;
    street2: z.ZodOptional<z.ZodString>;
    streetNumber: z.ZodOptional<z.ZodString>;
    postalCode: z.ZodOptional<z.ZodString>;
    city: z.ZodOptional<z.ZodString>;
    state: z.ZodOptional<z.ZodString>;
    country: z.ZodOptional<z.ZodString>;
    phone: z.ZodOptional<z.ZodString>;
    email: z.ZodOptional<z.ZodString>;
}, "strict", z.ZodTypeAny, {
    firstName?: string | undefined;
    middleName?: string | undefined;
    lastName?: string | undefined;
    street?: string | undefined;
    street2?: string | undefined;
    streetNumber?: string | undefined;
    postalCode?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    phone?: string | undefined;
    email?: string | undefined;
    type: EnumType;
}, {
    firstName?: string | undefined;
    middleName?: string | undefined;
    lastName?: string | undefined;
    street?: string | undefined;
    street2?: string | undefined;
    streetNumber?: string | undefined;
    postalCode?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    phone?: string | undefined;
    email?: string | undefined;
    type: "delivery" | "billing" | "other";
}>;
export type AddressInputRequest = z.infer<typeof addressInputRequest>;
export type Address = AddressInputRequest;
