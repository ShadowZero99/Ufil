{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Desktop\\\\ufil\\\\ufil\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useIsomorphicEffect } from '@mantine/hooks';\nimport { useComponentDefaultProps, useMantineTheme } from '@mantine/styles';\nfunction Portal(props) {\n  var _useComponentDefaultP = useComponentDefaultProps(\"Portal\", {}, props),\n    children = _useComponentDefaultP.children,\n    target = _useComponentDefaultP.target,\n    className = _useComponentDefaultP.className;\n  var theme = useMantineTheme();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    mounted = _useState2[0],\n    setMounted = _useState2[1];\n  var ref = useRef();\n  useIsomorphicEffect(function () {\n    setMounted(true);\n    ref.current = !target ? document.createElement(\"div\") : typeof target === \"string\" ? document.querySelector(target) : target;\n    if (!target) {\n      document.body.appendChild(ref.current);\n    }\n    return function () {\n      !target && document.body.removeChild(ref.current);\n    };\n  }, [target]);\n  if (!mounted) {\n    return null;\n  }\n  return createPortal( /* @__PURE__ */React.createElement(\"div\", {\n    className: className,\n    dir: theme.dir\n  }, children), ref.current);\n}\nPortal.displayName = \"@mantine/core/Portal\";\nexport { Portal };","map":null,"metadata":{},"sourceType":"module"}