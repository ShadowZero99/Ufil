{"ast":null,"code":"'use strict';\n\nconst path = require('path');\nconst os = require('os');\nconst fs = require('graceful-fs');\nconst makeDir = require('make-dir');\nconst xdgBasedir = require('xdg-basedir');\nconst writeFileAtomic = require('write-file-atomic');\nconst dotProp = require('dot-prop');\nconst uniqueString = require('unique-string');\nconst configDirectory = xdgBasedir.config || path.join(os.tmpdir(), uniqueString());\nconst permissionError = 'You don\\'t have access to this file.';\nconst makeDirOptions = {\n  mode: 0o0700\n};\nconst writeFileOptions = {\n  mode: 0o0600\n};\nclass Configstore {\n  constructor(id, defaults) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const pathPrefix = options.globalConfigPath ? path.join(id, 'config.json') : path.join('configstore', `${id}.json`);\n    this.path = options.configPath || path.join(configDirectory, pathPrefix);\n    if (defaults) {\n      this.all = {\n        ...defaults,\n        ...this.all\n      };\n    }\n  }\n  get all() {\n    try {\n      return JSON.parse(fs.readFileSync(this.path, 'utf8'));\n    } catch (error) {\n      // Create directory if it doesn't exist\n      if (error.code === 'ENOENT') {\n        return {};\n      }\n\n      // Improve the message of permission errors\n      if (error.code === 'EACCES') {\n        error.message = `${error.message}\\n${permissionError}\\n`;\n      }\n\n      // Empty the file if it encounters invalid JSON\n      if (error.name === 'SyntaxError') {\n        writeFileAtomic.sync(this.path, '', writeFileOptions);\n        return {};\n      }\n      throw error;\n    }\n  }\n  set all(value) {\n    try {\n      // Make sure the folder exists as it could have been deleted in the meantime\n      makeDir.sync(path.dirname(this.path), makeDirOptions);\n      writeFileAtomic.sync(this.path, JSON.stringify(value, undefined, '\\t'), writeFileOptions);\n    } catch (error) {\n      // Improve the message of permission errors\n      if (error.code === 'EACCES') {\n        error.message = `${error.message}\\n${permissionError}\\n`;\n      }\n      throw error;\n    }\n  }\n  get size() {\n    return Object.keys(this.all || {}).length;\n  }\n  get(key) {\n    return dotProp.get(this.all, key);\n  }\n  set(key, value) {\n    const config = this.all;\n    if (arguments.length === 1) {\n      for (const k of Object.keys(key)) {\n        dotProp.set(config, k, key[k]);\n      }\n    } else {\n      dotProp.set(config, key, value);\n    }\n    this.all = config;\n  }\n  has(key) {\n    return dotProp.has(this.all, key);\n  }\n  delete(key) {\n    const config = this.all;\n    dotProp.delete(config, key);\n    this.all = config;\n  }\n  clear() {\n    this.all = {};\n  }\n}\nmodule.exports = Configstore;","map":{"version":3,"names":["path","require","os","fs","makeDir","xdgBasedir","writeFileAtomic","dotProp","uniqueString","configDirectory","config","join","tmpdir","permissionError","makeDirOptions","mode","writeFileOptions","Configstore","constructor","id","defaults","options","pathPrefix","globalConfigPath","configPath","all","JSON","parse","readFileSync","error","code","message","name","sync","value","dirname","stringify","undefined","size","Object","keys","length","get","key","set","arguments","k","has","delete","clear","module","exports"],"sources":["C:/Users/PC/node_modules/firebase-tools/node_modules/configstore/index.js"],"sourcesContent":["'use strict';\nconst path = require('path');\nconst os = require('os');\nconst fs = require('graceful-fs');\nconst makeDir = require('make-dir');\nconst xdgBasedir = require('xdg-basedir');\nconst writeFileAtomic = require('write-file-atomic');\nconst dotProp = require('dot-prop');\nconst uniqueString = require('unique-string');\n\nconst configDirectory = xdgBasedir.config || path.join(os.tmpdir(), uniqueString());\nconst permissionError = 'You don\\'t have access to this file.';\nconst makeDirOptions = {mode: 0o0700};\nconst writeFileOptions = {mode: 0o0600};\n\nclass Configstore {\n\tconstructor(id, defaults, options = {}) {\n\t\tconst pathPrefix = options.globalConfigPath ?\n\t\t\tpath.join(id, 'config.json') :\n\t\t\tpath.join('configstore', `${id}.json`);\n\n\t\tthis.path = options.configPath || path.join(configDirectory, pathPrefix);\n\n\t\tif (defaults) {\n\t\t\tthis.all = {\n\t\t\t\t...defaults,\n\t\t\t\t...this.all\n\t\t\t};\n\t\t}\n\t}\n\n\tget all() {\n\t\ttry {\n\t\t\treturn JSON.parse(fs.readFileSync(this.path, 'utf8'));\n\t\t} catch (error) {\n\t\t\t// Create directory if it doesn't exist\n\t\t\tif (error.code === 'ENOENT') {\n\t\t\t\treturn {};\n\t\t\t}\n\n\t\t\t// Improve the message of permission errors\n\t\t\tif (error.code === 'EACCES') {\n\t\t\t\terror.message = `${error.message}\\n${permissionError}\\n`;\n\t\t\t}\n\n\t\t\t// Empty the file if it encounters invalid JSON\n\t\t\tif (error.name === 'SyntaxError') {\n\t\t\t\twriteFileAtomic.sync(this.path, '', writeFileOptions);\n\t\t\t\treturn {};\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tset all(value) {\n\t\ttry {\n\t\t\t// Make sure the folder exists as it could have been deleted in the meantime\n\t\t\tmakeDir.sync(path.dirname(this.path), makeDirOptions);\n\n\t\t\twriteFileAtomic.sync(this.path, JSON.stringify(value, undefined, '\\t'), writeFileOptions);\n\t\t} catch (error) {\n\t\t\t// Improve the message of permission errors\n\t\t\tif (error.code === 'EACCES') {\n\t\t\t\terror.message = `${error.message}\\n${permissionError}\\n`;\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tget size() {\n\t\treturn Object.keys(this.all || {}).length;\n\t}\n\n\tget(key) {\n\t\treturn dotProp.get(this.all, key);\n\t}\n\n\tset(key, value) {\n\t\tconst config = this.all;\n\n\t\tif (arguments.length === 1) {\n\t\t\tfor (const k of Object.keys(key)) {\n\t\t\t\tdotProp.set(config, k, key[k]);\n\t\t\t}\n\t\t} else {\n\t\t\tdotProp.set(config, key, value);\n\t\t}\n\n\t\tthis.all = config;\n\t}\n\n\thas(key) {\n\t\treturn dotProp.has(this.all, key);\n\t}\n\n\tdelete(key) {\n\t\tconst config = this.all;\n\t\tdotProp.delete(config, key);\n\t\tthis.all = config;\n\t}\n\n\tclear() {\n\t\tthis.all = {};\n\t}\n}\n\nmodule.exports = Configstore;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}