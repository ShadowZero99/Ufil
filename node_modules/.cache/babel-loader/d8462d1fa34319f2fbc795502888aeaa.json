{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"C:\\\\Users\\\\PC\\\\OneDrive\\\\Desktop\\\\ufil\\\\ufil\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\nvar _toConsumableArray = require(\"C:\\\\Users\\\\PC\\\\OneDrive\\\\Desktop\\\\ufil\\\\ufil\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\PC\\\\OneDrive\\\\Desktop\\\\ufil\\\\ufil\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.randomInt = exports.debounce = exports.last = exports.cloneDeep = exports.groupBy = exports.assertIsStringOrUndefined = exports.assertIsNumber = exports.assertIsString = exports.assertDefined = exports.thirtyDaysFromNow = exports.isRunningInWSL = exports.isCloudEnvironment = exports.datetimeString = exports.createDestroyer = exports.promiseWithSpinner = exports.setupLoggers = exports.tryParse = exports.tryStringify = exports.promiseProps = exports.withTimeout = exports.promiseWhile = exports.promiseAllSettled = exports.getFunctionsEventProvider = exports.endpoint = exports.makeActiveProject = exports.streamToString = exports.stringToStream = exports.explainStdin = exports.allSettled = exports.reject = exports.logLabeledError = exports.logLabeledWarning = exports.logWarning = exports.logLabeledBullet = exports.logBullet = exports.logLabeledSuccess = exports.logSuccess = exports.addSubdomain = exports.addDatabaseNamespace = exports.getDatabaseViewDataUrl = exports.getDatabaseUrl = exports.envOverride = exports.getInheritedOption = exports.consoleUrl = exports.envOverrides = void 0;\nvar _ = require(\"lodash\");\nvar url = require(\"url\");\nvar clc = require(\"colorette\");\nvar ora = require(\"ora\");\nvar process = require(\"process\");\nvar stream_1 = require(\"stream\");\nvar winston = require(\"winston\");\nvar triple_beam_1 = require(\"triple-beam\");\nvar assert_1 = require(\"assert\");\nvar stripAnsi = require(\"strip-ansi\");\nvar configstore_1 = require(\"./configstore\");\nvar error_1 = require(\"./error\");\nvar logger_1 = require(\"./logger\");\nvar IS_WINDOWS = process.platform === \"win32\";\nvar SUCCESS_CHAR = IS_WINDOWS ? \"+\" : \"✔\";\nvar WARNING_CHAR = IS_WINDOWS ? \"!\" : \"⚠\";\nvar ERROR_CHAR = IS_WINDOWS ? \"!!\" : \"⬢\";\nvar THIRTY_DAYS_IN_MILLISECONDS = 30 * 24 * 60 * 60 * 1000;\nexports.envOverrides = [];\nfunction consoleUrl(project, path) {\n  var api = require(\"./api\");\n  return \"\".concat(api.consoleOrigin, \"/project/\").concat(project).concat(path);\n}\nexports.consoleUrl = consoleUrl;\nfunction getInheritedOption(options, key) {\n  var target = options;\n  while (target) {\n    if (target[key] !== undefined) {\n      return target[key];\n    }\n    target = target.parent;\n  }\n}\nexports.getInheritedOption = getInheritedOption;\nfunction envOverride(envname, value, coerce) {\n  var currentEnvValue = process.env[envname];\n  if (currentEnvValue && currentEnvValue.length) {\n    exports.envOverrides.push(envname);\n    if (coerce) {\n      try {\n        return coerce(currentEnvValue, value);\n      } catch (e) {\n        return value;\n      }\n    }\n    return currentEnvValue;\n  }\n  return value;\n}\nexports.envOverride = envOverride;\nfunction getDatabaseUrl(origin, namespace, pathname) {\n  var withPath = url.resolve(origin, pathname);\n  return addDatabaseNamespace(withPath, namespace);\n}\nexports.getDatabaseUrl = getDatabaseUrl;\nfunction getDatabaseViewDataUrl(origin, project, namespace, pathname) {\n  var urlObj = new url.URL(origin);\n  if (urlObj.hostname.includes(\"firebaseio\") || urlObj.hostname.includes(\"firebasedatabase\")) {\n    return consoleUrl(project, \"/database/\".concat(namespace, \"/data\").concat(pathname));\n  }\n  return getDatabaseUrl(origin, namespace, pathname + \".json\");\n}\nexports.getDatabaseViewDataUrl = getDatabaseViewDataUrl;\nfunction addDatabaseNamespace(origin, namespace) {\n  var urlObj = new url.URL(origin);\n  if (urlObj.hostname.includes(namespace)) {\n    return urlObj.href;\n  }\n  if (urlObj.hostname.includes(\"firebaseio\") || urlObj.hostname.includes(\"firebasedatabase\")) {\n    return addSubdomain(origin, namespace);\n  }\n  urlObj.searchParams.set(\"ns\", namespace);\n  return urlObj.href;\n}\nexports.addDatabaseNamespace = addDatabaseNamespace;\nfunction addSubdomain(origin, subdomain) {\n  return origin.replace(\"//\", \"//\".concat(subdomain, \".\"));\n}\nexports.addSubdomain = addSubdomain;\nfunction logSuccess(message) {\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"info\";\n  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  logger_1.logger[type](clc.green(clc.bold(\"\".concat(SUCCESS_CHAR, \" \"))), message, data);\n}\nexports.logSuccess = logSuccess;\nfunction logLabeledSuccess(label, message) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"info\";\n  var data = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n  logger_1.logger[type](clc.green(clc.bold(\"\".concat(SUCCESS_CHAR, \"  \").concat(label, \":\"))), message, data);\n}\nexports.logLabeledSuccess = logLabeledSuccess;\nfunction logBullet(message) {\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"info\";\n  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  logger_1.logger[type](clc.cyan(clc.bold(\"i \")), message, data);\n}\nexports.logBullet = logBullet;\nfunction logLabeledBullet(label, message) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"info\";\n  var data = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n  logger_1.logger[type](clc.cyan(clc.bold(\"i  \".concat(label, \":\"))), message, data);\n}\nexports.logLabeledBullet = logLabeledBullet;\nfunction logWarning(message) {\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"warn\";\n  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  logger_1.logger[type](clc.yellow(clc.bold(\"\".concat(WARNING_CHAR, \" \"))), message, data);\n}\nexports.logWarning = logWarning;\nfunction logLabeledWarning(label, message) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"warn\";\n  var data = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n  logger_1.logger[type](clc.yellow(clc.bold(\"\".concat(WARNING_CHAR, \"  \").concat(label, \":\"))), message, data);\n}\nexports.logLabeledWarning = logLabeledWarning;\nfunction logLabeledError(label, message) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"error\";\n  var data = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n  logger_1.logger[type](clc.red(clc.bold(\"\".concat(ERROR_CHAR, \"  \").concat(label, \":\"))), message, data);\n}\nexports.logLabeledError = logLabeledError;\nfunction reject(message, options) {\n  return Promise.reject(new error_1.FirebaseError(message, options));\n}\nexports.reject = reject;\nfunction allSettled(promises) {\n  if (!promises.length) {\n    return Promise.resolve([]);\n  }\n  return new Promise(function (resolve) {\n    var remaining = promises.length;\n    var results = [];\n    var _loop = function _loop(i) {\n      void Promise.resolve(promises[i]).then(function (result) {\n        results[i] = {\n          status: \"fulfilled\",\n          value: result\n        };\n      }, function (err) {\n        results[i] = {\n          status: \"rejected\",\n          reason: err\n        };\n      }).then(function () {\n        if (! --remaining) {\n          resolve(results);\n        }\n      });\n    };\n    for (var i = 0; i < promises.length; i++) {\n      _loop(i);\n    }\n  });\n}\nexports.allSettled = allSettled;\nfunction explainStdin() {\n  if (IS_WINDOWS) {\n    throw new error_1.FirebaseError(\"STDIN input is not available on Windows.\", {\n      exit: 1\n    });\n  }\n  if (process.stdin.isTTY) {\n    logger_1.logger.info(clc.bold(\"Note:\"), \"Reading STDIN. Type JSON data and then press Ctrl-D\");\n  }\n}\nexports.explainStdin = explainStdin;\nfunction stringToStream(text) {\n  if (!text) {\n    return undefined;\n  }\n  var s = new stream_1.Readable();\n  s.push(text);\n  s.push(null);\n  return s;\n}\nexports.stringToStream = stringToStream;\nfunction streamToString(s) {\n  return new Promise(function (resolve, reject) {\n    var b = \"\";\n    s.on(\"error\", reject);\n    s.on(\"data\", function (d) {\n      return b += \"\".concat(d);\n    });\n    s.once(\"end\", function () {\n      return resolve(b);\n    });\n  });\n}\nexports.streamToString = streamToString;\nfunction makeActiveProject(projectDir, newActive) {\n  var activeProjects = configstore_1.configstore.get(\"activeProjects\") || {};\n  if (newActive) {\n    activeProjects[projectDir] = newActive;\n  } else {\n    _.unset(activeProjects, projectDir);\n  }\n  configstore_1.configstore.set(\"activeProjects\", activeProjects);\n}\nexports.makeActiveProject = makeActiveProject;\nfunction endpoint(parts) {\n  return \"/\".concat(parts.join(\"/\"));\n}\nexports.endpoint = endpoint;\nfunction getFunctionsEventProvider(eventType) {\n  var parts = eventType.split(\"/\");\n  if (parts.length > 1) {\n    var provider = last(parts[1].split(\".\"));\n    return _.capitalize(provider);\n  }\n  if (/google.pubsub/.exec(eventType)) {\n    return \"PubSub\";\n  } else if (/google.storage/.exec(eventType)) {\n    return \"Storage\";\n  } else if (/google.analytics/.exec(eventType)) {\n    return \"Analytics\";\n  } else if (/google.firebase.database/.exec(eventType)) {\n    return \"Database\";\n  } else if (/google.firebase.auth/.exec(eventType)) {\n    return \"Auth\";\n  } else if (/google.firebase.crashlytics/.exec(eventType)) {\n    return \"Crashlytics\";\n  } else if (/google.firestore/.exec(eventType)) {\n    return \"Firestore\";\n  }\n  return _.capitalize(eventType.split(\".\")[1]);\n}\nexports.getFunctionsEventProvider = getFunctionsEventProvider;\nfunction promiseAllSettled(promises) {\n  var wrappedPromises = promises.map( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(p) {\n      var val;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return Promise.resolve(p);\n            case 3:\n              val = _context.sent;\n              return _context.abrupt(\"return\", {\n                state: \"fulfilled\",\n                value: val\n              });\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", {\n                state: \"rejected\",\n                reason: _context.t0\n              });\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n  return Promise.all(wrappedPromises);\n}\nexports.promiseAllSettled = promiseAllSettled;\nfunction promiseWhile(_x2, _x3) {\n  return _promiseWhile.apply(this, arguments);\n}\nfunction _promiseWhile() {\n  _promiseWhile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(action, check) {\n    var interval,\n      _args3 = arguments;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            interval = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : 2500;\n            return _context3.abrupt(\"return\", new Promise(function (resolve, promiseReject) {\n              var run = /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n                  var res;\n                  return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          _context2.prev = 0;\n                          _context2.next = 3;\n                          return action();\n                        case 3:\n                          res = _context2.sent;\n                          if (!check(res)) {\n                            _context2.next = 6;\n                            break;\n                          }\n                          return _context2.abrupt(\"return\", resolve(res));\n                        case 6:\n                          setTimeout(run, interval);\n                          _context2.next = 12;\n                          break;\n                        case 9:\n                          _context2.prev = 9;\n                          _context2.t0 = _context2[\"catch\"](0);\n                          return _context2.abrupt(\"return\", promiseReject(_context2.t0));\n                        case 12:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2, null, [[0, 9]]);\n                }));\n                return function run() {\n                  return _ref3.apply(this, arguments);\n                };\n              }();\n              run();\n            }));\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _promiseWhile.apply(this, arguments);\n}\nexports.promiseWhile = promiseWhile;\nfunction withTimeout(timeoutMs, promise) {\n  return new Promise(function (resolve, reject) {\n    var timeout = setTimeout(function () {\n      return reject(new Error(\"Timed out.\"));\n    }, timeoutMs);\n    promise.then(function (value) {\n      clearTimeout(timeout);\n      resolve(value);\n    }, function (err) {\n      clearTimeout(timeout);\n      reject(err);\n    });\n  });\n}\nexports.withTimeout = withTimeout;\nfunction promiseProps(_x4) {\n  return _promiseProps.apply(this, arguments);\n}\nfunction _promiseProps() {\n  _promiseProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(obj) {\n    var resultObj, promises;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            resultObj = {};\n            promises = Object.keys(obj).map( /*#__PURE__*/function () {\n              var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(key) {\n                var r;\n                return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.next = 2;\n                        return Promise.resolve(obj[key]);\n                      case 2:\n                        r = _context4.sent;\n                        resultObj[key] = r;\n                      case 4:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n              return function (_x7) {\n                return _ref4.apply(this, arguments);\n              };\n            }());\n            return _context5.abrupt(\"return\", Promise.all(promises).then(function () {\n              return resultObj;\n            }));\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _promiseProps.apply(this, arguments);\n}\nexports.promiseProps = promiseProps;\nfunction tryStringify(value) {\n  if (typeof value === \"string\") {\n    return value;\n  }\n  try {\n    return JSON.stringify(value);\n  } catch (_a) {\n    return value;\n  }\n}\nexports.tryStringify = tryStringify;\nfunction tryParse(value) {\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  try {\n    return JSON.parse(value);\n  } catch (_a) {\n    return value;\n  }\n}\nexports.tryParse = tryParse;\nfunction setupLoggers() {\n  if (process.env.DEBUG) {\n    logger_1.logger.add(new winston.transports.Console({\n      level: \"debug\",\n      format: winston.format.printf(function (info) {\n        var segments = [info.message].concat(_toConsumableArray(info[triple_beam_1.SPLAT] || [])).map(tryStringify);\n        return \"\".concat(stripAnsi(segments.join(\" \")));\n      })\n    }));\n  } else if (process.env.IS_FIREBASE_CLI) {\n    logger_1.logger.add(new winston.transports.Console({\n      level: \"info\",\n      format: winston.format.printf(function (info) {\n        return [info.message].concat(_toConsumableArray(info[triple_beam_1.SPLAT] || [])).filter(function (chunk) {\n          return typeof chunk === \"string\";\n        }).join(\" \");\n      })\n    }));\n  }\n}\nexports.setupLoggers = setupLoggers;\nfunction promiseWithSpinner(_x5, _x6) {\n  return _promiseWithSpinner.apply(this, arguments);\n}\nfunction _promiseWithSpinner() {\n  _promiseWithSpinner = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(action, message) {\n    var spinner, data;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            spinner = ora(message).start();\n            _context6.prev = 1;\n            _context6.next = 4;\n            return action();\n          case 4:\n            data = _context6.sent;\n            spinner.succeed();\n            _context6.next = 12;\n            break;\n          case 8:\n            _context6.prev = 8;\n            _context6.t0 = _context6[\"catch\"](1);\n            spinner.fail();\n            throw _context6.t0;\n          case 12:\n            return _context6.abrupt(\"return\", data);\n          case 13:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[1, 8]]);\n  }));\n  return _promiseWithSpinner.apply(this, arguments);\n}\nexports.promiseWithSpinner = promiseWithSpinner;\nfunction createDestroyer(server) {\n  var connections = new Set();\n  server.on(\"connection\", function (conn) {\n    connections.add(conn);\n    conn.once(\"close\", function () {\n      return connections.delete(conn);\n    });\n  });\n  var destroyPromise = undefined;\n  return function destroyer() {\n    if (!destroyPromise) {\n      destroyPromise = new Promise(function (resolve, reject) {\n        server.close(function (err) {\n          if (err) return reject(err);\n          resolve();\n        });\n        connections.forEach(function (socket) {\n          return socket.destroy();\n        });\n      });\n    }\n    return destroyPromise;\n  };\n}\nexports.createDestroyer = createDestroyer;\nfunction datetimeString(d) {\n  var day = \"\".concat(d.getFullYear(), \"-\").concat((d.getMonth() + 1).toString().padStart(2, \"0\"), \"-\").concat(d.getDate().toString().padStart(2, \"0\"));\n  var time = \"\".concat(d.getHours().toString().padStart(2, \"0\"), \":\").concat(d.getMinutes().toString().padStart(2, \"0\"), \":\").concat(d.getSeconds().toString().padStart(2, \"0\"));\n  return \"\".concat(day, \" \").concat(time);\n}\nexports.datetimeString = datetimeString;\nfunction isCloudEnvironment() {\n  return !!process.env.CODESPACES;\n}\nexports.isCloudEnvironment = isCloudEnvironment;\nfunction isRunningInWSL() {\n  return !!process.env.WSL_DISTRO_NAME;\n}\nexports.isRunningInWSL = isRunningInWSL;\nfunction thirtyDaysFromNow() {\n  return new Date(Date.now() + THIRTY_DAYS_IN_MILLISECONDS);\n}\nexports.thirtyDaysFromNow = thirtyDaysFromNow;\nfunction assertDefined(val, message) {\n  if (val === undefined || val === null) {\n    throw new assert_1.AssertionError({\n      message: message || \"expected value to be defined but got \\\"\".concat(val, \"\\\"\")\n    });\n  }\n}\nexports.assertDefined = assertDefined;\nfunction assertIsString(val, message) {\n  if (typeof val !== \"string\") {\n    throw new assert_1.AssertionError({\n      message: message || \"expected \\\"string\\\" but got \\\"\".concat(typeof val, \"\\\"\")\n    });\n  }\n}\nexports.assertIsString = assertIsString;\nfunction assertIsNumber(val, message) {\n  if (typeof val !== \"number\") {\n    throw new assert_1.AssertionError({\n      message: message || \"expected \\\"number\\\" but got \\\"\".concat(typeof val, \"\\\"\")\n    });\n  }\n}\nexports.assertIsNumber = assertIsNumber;\nfunction assertIsStringOrUndefined(val, message) {\n  if (!(val === undefined || typeof val === \"string\")) {\n    throw new assert_1.AssertionError({\n      message: message || \"expected \\\"string\\\" or \\\"undefined\\\" but got \\\"\".concat(typeof val, \"\\\"\")\n    });\n  }\n}\nexports.assertIsStringOrUndefined = assertIsStringOrUndefined;\nfunction groupBy(arr, f) {\n  return arr.reduce(function (result, item) {\n    var key = f(item);\n    if (result[key]) {\n      result[key].push(item);\n    } else {\n      result[key] = [item];\n    }\n    return result;\n  }, {});\n}\nexports.groupBy = groupBy;\nfunction cloneArray(arr) {\n  return arr.map(function (e) {\n    return cloneDeep(e);\n  });\n}\nfunction cloneObject(obj) {\n  var clone = {};\n  for (var _i = 0, _Object$entries = Object.entries(obj); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n      k = _Object$entries$_i[0],\n      v = _Object$entries$_i[1];\n    clone[k] = cloneDeep(v);\n  }\n  return clone;\n}\nfunction cloneDeep(obj) {\n  if (typeof obj !== \"object\" || !obj) {\n    return obj;\n  }\n  if (obj instanceof RegExp) {\n    return RegExp(obj, obj.flags);\n  }\n  if (obj instanceof Date) {\n    return new Date(obj);\n  }\n  if (Array.isArray(obj)) {\n    return cloneArray(obj);\n  }\n  if (obj instanceof Map) {\n    return new Map(obj.entries());\n  }\n  return cloneObject(obj);\n}\nexports.cloneDeep = cloneDeep;\nfunction last(arr) {\n  if (!Array.isArray(arr)) {\n    return undefined;\n  }\n  return arr[arr.length - 1];\n}\nexports.last = last;\nfunction debounce(fn, delay) {\n  var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n    leading = _ref2.leading;\n  var timer;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (!timer && leading) {\n      fn.apply(void 0, args);\n    }\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      return fn.apply(void 0, args);\n    }, delay);\n  };\n}\nexports.debounce = debounce;\nfunction randomInt(min, max) {\n  min = Math.floor(min);\n  max = Math.ceil(max) + 1;\n  return Math.floor(Math.random() * (max - min) + min);\n}\nexports.randomInt = randomInt;","map":null,"metadata":{},"sourceType":"script"}