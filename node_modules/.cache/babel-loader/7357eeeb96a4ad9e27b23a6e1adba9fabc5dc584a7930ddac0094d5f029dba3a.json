{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Desktop\\\\ufil\\\\ufil\\\\src\\\\pages\\\\List\\\\List.js\";\nimport React from \"react\";\nimport bottle1 from \"../../img/Product_Images/bottle1.png\";\nimport bottle2 from \"../../img/Product_Images/bottle2.png\";\nimport bottle3 from \"../../img/Product_Images/bottle3.png\";\nimport bottle4 from \"../../img/Product_Images/bottle4.png\";\nimport logo1 from \"../../img/Product_Images/logo1.png\";\nimport logo2 from \"../../img/Product_Images/logo2.png\";\nimport { Link } from \"react-router-dom\";\nimport \"./List.css\";\n\n// Use dataArray here\n\n//import { useState, useEffect } from \"react\";\n\n//import items1 from \"../List/data.json\";\n\n//const fs = require(\"fs\");\n//const text = fs.readFileSync(\"../../file/1.txt\", \"utf-8\");\n//const data = JSON.parse(text);\n\n// const items = [\n//   {\n//     id: 1,\n//     imageUrl1: logo1,\n//     title1: \"Product01\",\n//     imageUrl2: bottle1,\n//     title2: \"Item 2\",\n//   },\n// {\n//   id: 2,\n//   imageUrl1: logo2,\n//   title1: \"Product02\",\n//   imageUrl2: bottle2,\n//   title2: \"Item 2\",\n// },\n// {\n//   id: 3,\n//   imageUrl1: logo2,\n//   title1: \"Product03\",\n//   imageUrl2: bottle3,\n//   title2: \"Item 2\",\n// },\n// {\n//   id: 4,\n//   imageUrl1: logo2,\n//   title1: \"Product04\",\n//   imageUrl2: bottle4,\n//   title2: \"Item 2\",\n// },\n// ];\n// const items =[ items1.map((obj) => ({\n//   ...obj,\n//   imageUrl1: logo1,\n//   imageUrl2: bottle1,\n// }))];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Item(props) {\n  return /*#__PURE__*/_jsxDEV(Link, {\n    style: {\n      textDecoration: \"none\"\n    },\n    to: \"/Volume\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.imageUrl1,\n        alt: props.title1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.title1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.imageUrl2,\n        alt: props.title2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_c = Item;\nfunction ListView(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-view\"\n\n    //style={{ overflowY: \"scroll\", maxHeight: \"70vh\" }}\n    ,\n    children: fetch(\"../List/data.json\").then(response => response.json()).then(data => {\n      const dataArraySize = data.length;\n      const items = [];\n      for (let i = 0; i < dataArraySize; i++) {\n        items.push({\n          id: data[i].id,\n          imageUrl1: data[i].imageUrl1,\n          title1: data[i].title1,\n          imageUrl2: data[i].imageUrl2,\n          title2: data[i].title2\n        });\n      }\n      items.map(item => /*#__PURE__*/_jsxDEV(Item, {\n        imageUrl1: item.imageUrl1,\n        title1: item.title1,\n        imageUrl2: item.imageUrl2,\n        title2: item.title2\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this));\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ListView;\nconst List = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"het\",\n    children: /*#__PURE__*/_jsxDEV(ListView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_c3 = List;\nexport default List;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"ListView\");\n$RefreshReg$(_c3, \"List\");","map":{"version":3,"names":["React","bottle1","bottle2","bottle3","bottle4","logo1","logo2","Link","Item","props","textDecoration","imageUrl1","title1","imageUrl2","title2","ListView","fetch","then","response","json","data","dataArraySize","length","items","i","push","id","map","item","List"],"sources":["C:/Users/PC/OneDrive/Desktop/ufil/ufil/src/pages/List/List.js"],"sourcesContent":["import React from \"react\";\r\nimport bottle1 from \"../../img/Product_Images/bottle1.png\";\r\nimport bottle2 from \"../../img/Product_Images/bottle2.png\";\r\nimport bottle3 from \"../../img/Product_Images/bottle3.png\";\r\nimport bottle4 from \"../../img/Product_Images/bottle4.png\";\r\nimport logo1 from \"../../img/Product_Images/logo1.png\";\r\nimport logo2 from \"../../img/Product_Images/logo2.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./List.css\";\r\n\r\n// Use dataArray here\r\n\r\n//import { useState, useEffect } from \"react\";\r\n\r\n//import items1 from \"../List/data.json\";\r\n\r\n//const fs = require(\"fs\");\r\n//const text = fs.readFileSync(\"../../file/1.txt\", \"utf-8\");\r\n//const data = JSON.parse(text);\r\n\r\n// const items = [\r\n//   {\r\n//     id: 1,\r\n//     imageUrl1: logo1,\r\n//     title1: \"Product01\",\r\n//     imageUrl2: bottle1,\r\n//     title2: \"Item 2\",\r\n//   },\r\n// {\r\n//   id: 2,\r\n//   imageUrl1: logo2,\r\n//   title1: \"Product02\",\r\n//   imageUrl2: bottle2,\r\n//   title2: \"Item 2\",\r\n// },\r\n// {\r\n//   id: 3,\r\n//   imageUrl1: logo2,\r\n//   title1: \"Product03\",\r\n//   imageUrl2: bottle3,\r\n//   title2: \"Item 2\",\r\n// },\r\n// {\r\n//   id: 4,\r\n//   imageUrl1: logo2,\r\n//   title1: \"Product04\",\r\n//   imageUrl2: bottle4,\r\n//   title2: \"Item 2\",\r\n// },\r\n// ];\r\n// const items =[ items1.map((obj) => ({\r\n//   ...obj,\r\n//   imageUrl1: logo1,\r\n//   imageUrl2: bottle1,\r\n// }))];\r\n\r\nfunction Item(props) {\r\n  return (\r\n    <Link style={{ textDecoration: \"none\" }} to=\"/Volume\">\r\n      <div className=\"item\">\r\n        <img src={props.imageUrl1} alt={props.title1} />\r\n        <p>{props.title1}</p>\r\n        <img src={props.imageUrl2} alt={props.title2} />\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nfunction ListView(props) {\r\n  return (\r\n    <div\r\n      className=\"list-view\"\r\n\r\n      //style={{ overflowY: \"scroll\", maxHeight: \"70vh\" }}\r\n    >\r\n      {fetch(\"../List/data.json\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const dataArraySize = data.length;\r\n          const items = [];\r\n          for (let i = 0; i < dataArraySize; i++) {\r\n            items.push({\r\n              id: data[i].id,\r\n              imageUrl1: data[i].imageUrl1,\r\n              title1: data[i].title1,\r\n              imageUrl2: data[i].imageUrl2,\r\n              title2: data[i].title2,\r\n            });\r\n          }\r\n\r\n          items.map((item) => (\r\n            <Item\r\n              key={item.id}\r\n              imageUrl1={item.imageUrl1}\r\n              title1={item.title1}\r\n              imageUrl2={item.imageUrl2}\r\n              title2={item.title2}\r\n            />\r\n          ));\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst List = () => {\r\n  return (\r\n    <div className=\"het\">\r\n      <ListView />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}