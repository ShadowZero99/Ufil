{"ast":null,"code":"import { createStyles } from '@mantine/styles';\nvar useStyles = createStyles(function (theme, _ref) {\n  var smallerThan = _ref.smallerThan,\n    largerThan = _ref.largerThan,\n    query = _ref.query,\n    styles = _ref.styles;\n  var media = {};\n  var minWidth = theme.fn.size({\n    size: largerThan,\n    sizes: theme.breakpoints\n  });\n  var maxWidth = theme.fn.size({\n    size: smallerThan,\n    sizes: theme.breakpoints\n  });\n  var _styles = typeof styles === \"function\" ? styles(theme) : styles;\n  if (largerThan !== void 0 && smallerThan !== void 0) {\n    media[\"@media (min-width: \".concat(minWidth, \"px) and (max-width: \").concat(maxWidth - 1, \"px)\")] = _styles;\n  } else {\n    if (largerThan !== void 0) {\n      media[\"@media (min-width: \".concat(theme.fn.size({\n        size: largerThan,\n        sizes: theme.breakpoints\n      }), \"px)\")] = _styles;\n    }\n    if (smallerThan !== void 0) {\n      media[\"@media (max-width: \".concat(theme.fn.size({\n        size: smallerThan,\n        sizes: theme.breakpoints\n      }) - 1, \"px)\")] = _styles;\n    }\n  }\n  if (query) {\n    media[\"@media \".concat(query)] = _styles;\n  }\n  return {\n    media: media\n  };\n});\nexport default useStyles;","map":null,"metadata":{},"sourceType":"module"}